openapi: 3.0.3
info:
  title: Account Management API
  description: API for managing user accounts and subscriptions
  version: v1.0.0
  contact:
    name: Account Management Team
    email: support@accountmanagement.app
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: http://localhost:8080
    description: Local development server
tags:
  - name: User Management
    description: API for managing users
  - name: Subscription Management
    description: API for managing user subscriptions
paths:
  /users:
    post:
      tags:
        - User Management
      summary: Create a new user
      description: Creates a new user with the provided information
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Invalid input data
  /users/{id}:
    get:
      tags:
        - User Management
      summary: Get a user by ID
      description: Returns a user based on the provided ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found
    put:
      tags:
        - User Management
      summary: Update a user
      description: Updates a user with the provided information
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: ID of the user to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found
        '400':
          description: Invalid input data
    delete:
      tags:
        - User Management
      summary: Delete a user
      description: Deletes a user with the specified ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
  /users/{userId}/subscriptions:
    get:
      tags:
        - Subscription Management
      summary: Get user subscriptions
      description: Returns all subscriptions for a specific user
      operationId: getUserSubscriptions
      parameters:
        - name: userId
          in: path
          description: ID of the user to get subscriptions for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Subscriptions found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionDto'
        '404':
          description: User not found
    post:
      tags:
        - Subscription Management
      summary: Add a subscription
      description: Adds a new subscription for a specific user
      operationId: addSubscription
      parameters:
        - name: userId
          in: path
          description: ID of the user to add subscription for
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDto'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDto'
        '404':
          description: User not found
        '400':
          description: Invalid input data
  /users/{userId}/subscriptions/{subscriptionId}:
    delete:
      tags:
        - Subscription Management
      summary: Delete a subscription
      description: Deletes a specific subscription for a user
      operationId: deleteSubscription
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
        - name: subscriptionId
          in: path
          description: ID of the subscription to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Subscription deleted successfully
        '404':
          description: User or subscription not found
  /subscriptions/top:
    get:
      tags:
        - Subscription Management
      summary: Get top subscriptions
      description: Returns a list of the most popular subscriptions
      operationId: getTopSubscriptions
      responses:
        '200':
          description: Top subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
    SubscriptionDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - PENDING
            - CANCELLED